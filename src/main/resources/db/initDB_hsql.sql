DROP TABLE user_roles
IF EXISTS;
DROP TABLE restaurant_votes
IF EXISTS;
DROP TABLE dishes
IF EXISTS;
DROP TABLE restaurants
IF EXISTS;
DROP TABLE users
IF EXISTS;
DROP TABLE lunches
IF EXISTS;
DROP SEQUENCE global_seq
IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE users
(
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  email    VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx
  ON users (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);

CREATE TABLE lunches
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  date    TIMESTAMP               NOT NULL,
  enabled BOOLEAN DEFAULT TRUE    NOT NULL
  -- TODO add trigger and disable now() > date 11:00
);
CREATE UNIQUE INDEX lunches_unique_date_idx
  ON lunches (date);

CREATE TABLE restaurants
(
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name     VARCHAR(255) NOT NULL,
  lunch_id INTEGER      NOT NULL,
  FOREIGN KEY (lunch_id) REFERENCES lunches (id)
    ON DELETE CASCADE
);
CREATE UNIQUE INDEX restaurants_unique_name_lunch_idx
  ON restaurants (name, lunch_id);

CREATE TABLE dishes
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name          VARCHAR(255) NOT NULL,
  price         INTEGER      NOT NULL,
  restaurant_id INTEGER      NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);
CREATE UNIQUE INDEX dishes_unique_name_restaurant_idx
  ON dishes (name, restaurant_id);

CREATE TABLE restaurant_votes
(
  user_id       INTEGER NOT NULL,
  restaurant_id INTEGER NOT NULL,
  CONSTRAINT restaurant_votes_idx UNIQUE (restaurant_id, user_id),
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);